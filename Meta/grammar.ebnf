program          ::=  declaration* EOF;

declaration      ::=  var_declaration | statement;

(* [ ] is like ?, means either once or never *)
var_declaration  ::= "var" IDENTIFIER [ "=" expression ] ";" ;

statement        ::= expr_statement | print_statement | block_statement
                     if_statement | while_statement | for_statement ;

expr_statement   ::= expression ";" ;

print_statement  ::= "print" expression ";" ;

block_statement  ::= "{" declaration* "}" ;

if_statemnet     ::= if "(" expression ")" statement [ "else" statement ] ;

while_statement   ::= "while" "(" expression ")" statement ;

for_statement    ::= "for" "(" ( var_declaration | expr_statement | ";" ) [ expression ] ";" [ expression ] ")" statement ;

expression       ::=  assignment;

assignment       ::=  IDENTIFIER "=" expression | logic_or ;

lofic_or         ::=  logic_and ( "or" logic_and )* ;

logic_and        ::=  equality ( "and" equality )* ;

equality         ::=  comparison ( ( "!=" | "==" ) comparison )* ;

comparison       ::=  term ( ( ">" | ">=" | "<" | "<=" ) term )* ;

term             ::=  factor ( ( "-" | "+" ) factor )* ;

factor           ::=  unary ( ( "/" | "*" ) unary )* ;

unary            ::=  ( "!" | "-" ) unary | primary ;

primary          ::=  NUMBER | STRING | "true" | "false" | "nil" | "(" expression ")" | IDENTIFIER ;

